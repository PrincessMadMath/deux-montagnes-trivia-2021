{"version":3,"sources":["img/home.svg","Question.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["Question","text","bg","padding","App","pt","maxW","src","logo","alt","size","spacing","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,MAA0B,iC,OCM5BA,EAAW,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KACvB,OACI,cAAC,IAAD,CAAKC,GAAG,SAASC,QAAS,EAA1B,SACKF,KCwDEG,MA5Df,WACI,OACI,cAAC,IAAD,CAAKC,GAAI,EAAT,SACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKC,KAAK,KAAV,SACI,cAAC,IAAD,CAAOC,IAAKC,EAAMC,IAAI,oBAG9B,cAAC,IAAD,UACI,cAAC,IAAD,CAASC,KAAK,MAAML,GAAI,EAAxB,iEAIJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAKC,KAAK,MAAMD,GAAI,EAApB,SACI,cAAC,IAAD,CAAOM,QAAS,EAAhB,SACI,cAAC,IAAD,CAAMC,SAAS,KAAf,kMAOZ,cAAC,IAAD,CAAQP,GAAI,EAAZ,SACI,eAAC,IAAD,CAAOM,QAAS,EAAhB,UACI,cAAC,IAAD,CAAMC,SAAS,KAAf,sDACA,eAAC,IAAD,WACI,cAAC,IAAD,+DACA,cAAC,IAAD,6EACA,cAAC,IAAD,yDACA,cAAC,IAAD,kIAIA,cAAC,IAAD,qFACA,cAAC,IAAD,iEACA,cAAC,IAAD,4CAIZ,cAAC,IAAD,CAAQP,GAAI,EAAZ,SACI,eAAC,IAAD,CAAOM,QAAS,EAAhB,UACI,cAAC,EAAD,CAAUV,KAAK,+IACf,cAAC,EAAD,CAAUA,KAAK,oFACf,cAAC,EAAD,CAAUA,KAAK,iIACf,cAAC,EAAD,CAAUA,KAAK,6CACf,cAAC,EAAD,CAAUA,KAAK,oGACf,cAAC,EAAD,CAAUA,KAAK,gFACf,cAAC,EAAD,CAAUA,KAAK,6EACf,cAAC,EAAD,CAAUA,KAAK,sHACf,cAAC,EAAD,CAAUA,KAAK,6FACf,cAAC,EAAD,CAAUA,KAAK,0FC3CxBY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCFDQ,EAAQC,YAAY,CAAEC,OALP,CACxBC,iBAAkB,OAClBC,oBAAoB,KCIxBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAgBP,MAAOA,EAAvB,SACI,cAAC,EAAD,QAGRQ,SAASC,eAAe,SAM5BlB,M","file":"static/js/main.9efa8d25.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home.5d92427d.svg\";","import { Box } from \"@chakra-ui/react\";\n\ninterface QuestionProps {\n    text: string;\n}\n\nexport const Question = ({ text }: QuestionProps) => {\n    return (\n        <Box bg=\"tomato\" padding={4}>\n            {text}\n        </Box>\n    );\n};\n","import { Box, Center, Heading, Image, ListItem, OrderedList, Stack, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport logo from \"./img/home.svg\";\nimport { Question } from \"./Question\";\n\nfunction App() {\n    return (\n        <Box pt={8}>\n            <Stack>\n                <Center>\n                    <Box maxW=\"sm\">\n                        <Image src={logo} alt=\"Future Home\" />\n                    </Box>\n                </Center>\n                <Center>\n                    <Heading size=\"2xl\" pt={4}>\n                        Ta fête dans notre nouvelle maison? (presque!)\n                    </Heading>\n                </Center>\n                <Center>\n                    <Box maxW=\"2xl\" pt={6}>\n                        <Stack spacing={2}>\n                            <Text fontSize=\"xl\">\n                                Bienvenu à ta chasse au trésor virtuelle annuelle! Cette année je t'invite à faire un\n                                rally virtuel à travers notre prochain quartier pour trouves les indices.\n                            </Text>\n                        </Stack>\n                    </Box>\n                </Center>\n                <Center pt={4}>\n                    <Stack spacing={4}>\n                        <Text fontSize=\"xl\">Voici les règles pour cette année:</Text>\n                        <OrderedList>\n                            <ListItem>Assure toi d'avoir installer le programme 7-Zip.</ListItem>\n                            <ListItem>Trouve le fichier \"Trésor.7z\" dans notre dropbox de couple.</ListItem>\n                            <ListItem>Trouve la réponse à chaque question.</ListItem>\n                            <ListItem>\n                                Respecte la convention de PascalCase pour transformer les mots des réponses.(i.e: Old\n                                fashioned =&gt; OldFashioned)\n                            </ListItem>\n                            <ListItem>Combine chaque réponse PascalCase avec un \"_\" (i.e: 1_2_[...]_9_10)</ListItem>\n                            <ListItem>Utilise ce mot de passe pour ouvrir le fichier .7z</ListItem>\n                            <ListItem>Réclame ton cadeau</ListItem>\n                        </OrderedList>\n                    </Stack>\n                </Center>\n                <Center pt={6}>\n                    <Stack spacing={4}>\n                        <Question text=\"1) Quel film serais tu aller voir au cinéma le plus proche au moment où les photo google map ont été prit? (titre en francais)\" />\n                        <Question text=\"2) Adresse du premier restaurant franchisé qui a ouvert à Deux-Montagnes?\" />\n                        <Question text=\"3) Quel est le nombre en minutes de parcours depuis la gare centrale par le REM pour se rendre à celle de Deux-Montagnes?\" />\n                        <Question text=\"4) Quel jour est ramassé le composte?\" />\n                        <Question text=\"5) Distance (en mètre arrondis au centaine) entre la future maison et la SAQ la plus proche?\" />\n                        <Question text=\"6)Combien de minute en vélo entre Signé Crème et la future maison?\" />\n                        <Question text=\"7) Nom du restaurant de sushi qui parrait peut rivaliser le Sushi Ville?\" />\n                        <Question text=\"8) Temps à pied (en minutes) pour se rendre à la plus proche boulangerie (qu'on espère au moins Tier 2)?\" />\n                        <Question text=\"9) Temps à pied (en minutes) pour se rendre au restaurant déjeuner le plus proche?\" />\n                        <Question text=\"10) Combien de place de parking y a t-il à côté du Noire&Blanche?\" />\n                    </Stack>\n                </Center>\n            </Stack>\n        </Box>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme, ThemeConfig } from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n    initialColorMode: \"dark\",\n    useSystemColorMode: false,\n};\n\nexport const theme = extendTheme({ config });\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <ChakraProvider theme={theme}>\n            <App />\n        </ChakraProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}